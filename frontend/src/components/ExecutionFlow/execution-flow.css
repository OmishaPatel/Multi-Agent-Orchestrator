/**
 * ExecutionFlow Component Styles
 * 
 * Provides styling for:
 * - Task dependency visualization using CSS Grid and Flexbox
 * - Responsive design for different screen sizes
 * - Progress indicators and status displays
 * - Real-time update animations
 */

.execution-flow {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

.execution-flow-container {
  background: var(--color-surface);
  border-radius: var(--border-radius);
  padding: var(--space-6);
  box-shadow: var(--shadow-sm);
}

.execution-flow-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: var(--space-6);
}

.execution-flow-controls {
  display: flex;
  gap: var(--space-2);
}

.execution-flow-progress {
  margin-bottom: var(--space-6);
}

.progress-bar {
  width: 100%;
  height: 8px;
  background: var(--color-border);
  border-radius: 4px;
  overflow: hidden;
  margin-bottom: var(--space-2);
}

.progress-fill {
  height: 100%;
  background: var(--color-primary);
  transition: width 0.3s ease;
}

.progress-text {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: var(--text-sm);
}

.progress-percentage {
  font-weight: 600;
  color: var(--color-primary);
}

.progress-status {
  color: var(--color-secondary);
}

.execution-flow-content {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: var(--space-6);
  margin-bottom: var(--space-6);
}

.task-dependency-graph {
  background: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  padding: var(--space-4);
  min-height: 300px;
}

.task-graph {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
}

.task-level {
  display: flex;
  gap: var(--space-3);
  flex-wrap: wrap;
}

.task-node {
  background: var(--color-surface);
  border: 2px solid var(--color-border);
  border-radius: var(--border-radius);
  padding: var(--space-3);
  min-width: 200px;
  transition: all 0.2s ease;
}

.task-node.active {
  border-color: var(--color-primary);
  box-shadow: 0 0 0 2px var(--color-primary-alpha);
}

.task-node.task-completed {
  border-color: var(--color-success);
  background: var(--color-success-light);
}

.task-node.task-failed {
  border-color: var(--color-error);
  background: var(--color-error-light);
}

/* Dark mode error styling */
@media (prefers-color-scheme: dark) {
  .task-node.task-failed {
    background: rgba(220, 38, 38, 0.15);
    border-color: #dc2626;
  }
}

.task-node.task-in-progress {
  border-color: var(--color-warning);
  background: var(--color-warning-light);
}

.task-node-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--space-2);
}

.task-id {
  font-size: var(--text-xs);
  font-weight: 600;
  color: var(--color-secondary);
}

.task-type {
  font-size: var(--text-xs);
  padding: 2px 6px;
  background: var(--color-border);
  border-radius: 3px;
  text-transform: uppercase;
}

.task-title {
  font-size: var(--text-sm);
  font-weight: 500;
  margin-bottom: var(--space-2);
  line-height: 1.4;
}

.task-status {
  display: flex;
  align-items: center;
  gap: var(--space-1);
  font-size: var(--text-xs);
  color: var(--color-secondary);
}

.execution-flow-details {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
}

.current-task-info,
.agent-status {
  background: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  padding: var(--space-4);
}

.current-task-info h3,
.agent-status h3 {
  font-size: var(--text-base);
  font-weight: 600;
  margin-bottom: var(--space-2);
  color: var(--color-text);
}

.current-task-description {
  font-size: var(--text-sm);
  color: var(--color-secondary);
  line-height: 1.5;
}

.agent-list {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.agent-status-item {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  padding: var(--space-2);
  border-radius: var(--border-radius-sm);
}

.agent-indicator {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--color-border);
}

.agent-status-item.active .agent-indicator {
  background: var(--color-success);
}

.agent-name {
  font-size: var(--text-sm);
  font-weight: 500;
}

.agent-status-text {
  font-size: var(--text-xs);
  color: var(--color-secondary);
  margin-left: auto;
  text-transform: capitalize;
}

.execution-flow-loading,
.execution-flow-error {
  text-align: center;
  padding: var(--space-8);
}

.loading-spinner {
  width: 32px;
  height: 32px;
  border: 3px solid var(--color-border);
  border-top: 3px solid var(--color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin: 0 auto var(--space-4);
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.error-icon {
  font-size: 48px;
  margin-bottom: var(--space-4);
}

.error-message {
  color: var(--color-error);
  margin-bottom: var(--space-4);
}

/* Responsive design */
@media (max-width: 768px) {
  .execution-flow-content {
    grid-template-columns: 1fr;
  }

  .execution-flow-header {
    flex-direction: column;
    gap: var(--space-4);
  }

  .task-level {
    flex-direction: column;
  }

  .task-node {
    min-width: auto;
  }
}

.execution-flow {
  width: 100%;
  max-width: 100%;
}

.execution-flow-container {
  background: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  overflow: hidden;
}

/* Header Section */
.execution-flow-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  padding: var(--space-6);
  background: var(--color-background-secondary);
  border-bottom: 1px solid var(--color-border);
}

.execution-flow-title {
  flex: 1;
}

.execution-flow-controls {
  display: flex;
  gap: var(--space-2);
  margin-left: var(--space-4);
}

/* Progress Section */
.execution-flow-progress {
  padding: var(--space-4) var(--space-6);
  background: var(--color-background);
  border-bottom: 1px solid var(--color-border);
}

.progress-bar {
  width: 100%;
  height: 8px;
  background: var(--color-background-tertiary);
  border-radius: var(--radius-full);
  overflow: hidden;
  margin-bottom: var(--space-3);
}

.progress-fill {
  height: 100%;
  background: linear-gradient(90deg, var(--color-primary), var(--color-primary-hover));
  border-radius: var(--radius-full);
  transition: width 1s ease-out;
  /* Smooth 1-second transition */
  position: relative;
}

.progress-fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  animation: progress-shimmer 2s infinite;
}

@keyframes progress-shimmer {
  0% {
    transform: translateX(-100%);
  }

  100% {
    transform: translateX(100%);
  }
}

.progress-text {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: var(--font-size-sm);
}

.progress-percentage {
  font-weight: var(--font-weight-semibold);
  color: var(--color-primary);
}

.progress-status {
  color: var(--color-text-secondary);
}

/* Main Content */
.execution-flow-content {
  display: flex;
  justify-content: center;
  padding: var(--space-6);
  min-height: 200px;
}

/* Removed task graph styles - no longer needed */

/* Execution Flow Details */
.execution-flow-details {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-6);
  max-width: 800px;
  width: 100%;
}

.current-task-info,
.agent-status {
  background: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-base);
  padding: var(--space-4);
}

.current-task-info h3,
.agent-status h3 {
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
  margin: 0 0 var(--space-3) 0;
}

.current-task-description {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  line-height: var(--line-height-normal);
}

/* Agent Status */
.agent-list {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.agent-status-item {
  display: flex;
  align-items: center;
  gap: var(--space-3);
  padding: var(--space-2);
  border-radius: var(--radius-sm);
  transition: background-color var(--transition-fast);
}

.agent-status-item.active {
  background: var(--color-primary-light);
}

.agent-status-item.completed {
  background: var(--color-success-light);
}

.agent-indicator {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--color-border);
  transition: background-color var(--transition-fast);
}

.agent-status-item.active .agent-indicator {
  background: var(--color-primary);
  animation: pulse-dot 2s infinite;
}

.agent-status-item.completed .agent-indicator {
  background: var(--color-success);
}

@keyframes pulse-dot {

  0%,
  100% {
    opacity: 1;
  }

  50% {
    opacity: 0.5;
  }
}

.agent-name {
  flex: 1;
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: var(--color-text-primary);
}

.agent-status-text {
  font-size: var(--font-size-xs);
  color: var(--color-text-secondary);
  text-transform: capitalize;
}

/* Loading State */
.execution-flow-loading {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--space-8);
  color: var(--color-text-secondary);
}

.loading-spinner {
  width: 40px;
  height: 40px;
  border: 3px solid var(--color-border);
  border-top-color: var(--color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: var(--space-4);
}

/* Error State */
.execution-flow-error {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--space-8);
  text-align: center;
}

.error-icon {
  font-size: 3rem;
  margin-bottom: var(--space-4);
}

.execution-flow-error h3 {
  color: var(--color-error);
  margin-bottom: var(--space-2);
}

.error-message {
  color: var(--color-text-secondary);
  margin-bottom: var(--space-4);
}

/* Responsive Design */
@media (max-width: 768px) {
  .execution-flow-details {
    grid-template-columns: 1fr;
    gap: var(--space-4);
  }
}

@media (max-width: 480px) {
  .execution-flow-header {
    flex-direction: column;
    gap: var(--space-4);
    align-items: stretch;
  }

  .execution-flow-controls {
    margin-left: 0;
    justify-content: flex-end;
  }

  .execution-flow-content {
    padding: var(--space-4);
  }
}

@media (max-width: 480px) {

  .execution-flow-header,
  .execution-flow-progress,
  .execution-flow-content {
    padding: var(--space-3);
  }

  .execution-flow-controls {
    flex-direction: column;
    gap: var(--space-2);
  }

  .progress-text {
    flex-direction: column;
    gap: var(--space-1);
    text-align: center;
  }

  .task-node {
    min-width: unset;
    max-width: 100%;
  }

  .execution-flow-details {
    gap: var(--space-4);
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {

  .progress-fill::after,
  .task-node.active,
  .agent-indicator,
  .loading-spinner {
    animation: none;
  }

  .task-node {
    transition: none;
  }

  .task-node:hover {
    transform: none;
  }
}

/* High contrast mode */
@media (prefers-contrast: high) {
  .task-node {
    border-width: 3px;
  }

  .task-node.active {
    border-width: 4px;
  }

  .progress-fill {
    background: var(--color-primary);
  }
}

/* Print styles */
@media print {
  .execution-flow-controls {
    display: none;
  }

  .execution-flow-loading,
  .execution-flow-error {
    display: none;
  }

  .task-node {
    break-inside: avoid;
  }
}